# Test cases for off directives, extends TestInterface
#
# @author Jan Strnadek, <jan.strnadek@gmail.com>

require_relative './interfaces/test_interface'
require_relative './helpers/test_helper'

class DirectivesOff < TestInterface
  # Test links
  def test_links
    # Parse links
    @parser_results[:links].each {
        |link|
        attr = link.attr
        puts "\tTest: ".yellow.bold << link.url << "\n" if @options[:debug]

        # Iterate parameters
        for i in 0..(attr.count - 1)

          # Get original request
          original = TestHelper.get_request(link.get_uri())

          # Test 404 error
          if original[:code] == 404
            puts "\t\tError: ".red.bold << "404 - not found" << "\n" if @options[:debug]
            next
          end

          # original vector
          original_vector = ContentTester::URLVector::get_vector(Nokogiri::HTML(original[:body]))
        
          # Add all parameters
          break_request = Marshal.load(Marshal.dump(attr))
          break_request[i][1] += "'"

          comment_request = Marshal.load(Marshal.dump(attr))
          comment_request[i][1] += "' -- "

          logic_true_request = Marshal.load(Marshal.dump(attr))
          logic_true_request[i][1] += "' OR '1' = '1"

          # Call get request
          break_request_s = TestHelper.get_request(TestHelper.create_url(link.url, break_request))
          comment_request_s = TestHelper.get_request(TestHelper.create_url(link.url, comment_request))
          logic_true_request_s = TestHelper.get_request(TestHelper.create_url(link.url, logic_true_request))

          # Count differences
          break_request_diff = get_diff_vector_weight(original_vector, break_request_s)
          comment_request_diff = get_diff_vector_weight(original_vector, comment_request_s)
          logic_true_request_diff = get_diff_vector_weight(original_vector, logic_true_request_s)

          # If there is 1 attribute, there will be no change when comment rest of request
          suspect = false

          # Cause there is invalid SQL query
          suspect = true if break_request_diff > 0

          # Cause there is less conditions
          suspect = true if comment_request_diff < 0

          # Cause there is LOGICAL true - more results!
          suspect = true if logic_true_request_diff < 0

          if suspect
            puts "\t\tParam: ".red.bold << logic_true_request[i][0] << " - probably " << "UNSECURED - different results!".bold.red << "\n"  if @options[:debug]
            puts "\t\t\t" << TestHelper.create_url(link.url, break_request).to_s << "\n\t\t\t" << TestHelper.create_url(link.url, comment_request).to_s << "\n\t\t\t" << TestHelper.create_url(link.url, logic_true_request).to_s if @options[:debug]
          end
        end
    }
  end

  def test_post_forms
   @parser_results[:post_forms].each {
      |form|

      # Debug output
      puts "\tTest: ".yellow.bold << form.action << "\n" if @options[:debug]

      # Iterate parameters
      for i in 0..(form.params.count - 1)
        # Get original request
        post_uri = URI(form.action)
        original = TestHelper.post_request(post_uri, form.get_attr())
        original_vector = ContentTester::URLVector::get_vector(Nokogiri::HTML(original[:body]))

        # Test to compare URL vectors from content
        break_request = TestHelper.add_symbol_to_form_request(form.params, i, "'")
        comment_request = TestHelper.add_symbol_to_form_request(form.params, i, "' -- ")
        logic_true_request = TestHelper.add_symbol_to_form_request(form.params, i, "' OR '1' = '1")

        # Send request and calculate URL vectors
        break_request_s = TestHelper.post_request(post_uri, break_request[:request])
        comment_request_s = TestHelper.post_request(post_uri, break_request[:request])
        logic_true_request_s = TestHelper.post_request(post_uri, logic_true_request[:request])

        # Try to test 30x - redirects, cause Login-form successfull log-in
        if comment_request[:code].to_i == 300
            puts "\t\tParam: ".red.bold << comment_request[:name] << " - probably " << "UNSECURED - redirection after modification!".bold.red << "\n"  if @options[:debug]
            puts "\t\t" << post_uri.to_s << "(attr: " << comment_request[:request].to_s << ")\n\n" if @options[:debug]
        end

        if logic_true_request[:code].to_i == 300
            # Something happend not correctly - maybe successfull login redirect
            puts "\t\tParam: ".red.bold << logic_true_request[:name] << " - probably " << "UNSECURED - redirection after modification!".bold.red << "\n"  if @options[:debug]
            puts "\t\t" << post_uri.to_s << "(attr: " << logic_true_request[:request].to_s << ")\n\n" if @options[:debug]
        end

        # Create URL vectors
        break_request_vector = ContentTester::URLVector::get_vector(Nokogiri::HTML(break_request_s[:body]))
        comment_request_vector = ContentTester::URLVector::get_vector(Nokogiri::HTML(comment_request_s[:body]))
        logic_true_vector = ContentTester::URLVector::get_vector(Nokogiri::HTML(logic_true_request_s[:body]))

        # Count differences
        break_request_diff = ContentTester::URLVector::vector_weight(ContentTester::URLVector::difference(original_vector, break_request_vector))
        comment_request_diff = ContentTester::URLVector::vector_weight(ContentTester::URLVector::difference(original_vector, comment_request_vector))
        logic_true_request_diff = ContentTester::URLVector::vector_weight(ContentTester::URLVector::difference(original_vector, logic_true_vector))

        # If there is 1 attribute, there will be no change when comment rest of request
        suspect = false

        # Cause there is invalid SQL query
        suspect = true if break_request_diff > 0

        # Cause there is less conditions
        suspect = true if comment_request_diff < 0

        # Cause there is LOGICAL true - more results!
        suspect = true if logic_true_request_diff < 0

        if suspect
          puts "\t\tParam: ".red.bold << logic_true_request[:name] << " - probably " << "UNSECURED - different results!!".bold.red << "\n"  if @options[:debug]
          puts "\t\t" << post_uri.to_s << "(attr: " << logic_true_request[:request].to_s << ")\n\n" if @options[:debug]
        end
      end
    }
  end

  def test_get_forms
    # Parse get forms
    @parser_results[:get_forms].each {
      |form|

      # Debug output
      puts "\tTest: ".yellow.bold << form.action << "\n" if @options[:debug]

      # Iterate parameters
      for i in 0..(form.params.count - 1)
        # Post uri
        post_uri = URI(form.action)

        # Get original request
        original = TestHelper.get_request(TestHelper.create_url(form.action, form.get_attr))
        original_vector = ContentTester::URLVector::get_vector(Nokogiri::HTML(original[:body]))

        # Test to compare URL vectors from content
        break_request = TestHelper.add_symbol_to_form_request(form.params, i, "'")
        comment_request = TestHelper.add_symbol_to_form_request(form.params, i, "' -- ")
        logic_true_request = TestHelper.add_symbol_to_form_request(form.params, i, "' OR '1' = '1")

        # Send request and calculate URL vectors
        break_request_s = TestHelper.get_request(TestHelper.create_url(form.action, break_request[:request]))
        comment_request_s = TestHelper.get_request(TestHelper.create_url(form.action, break_request[:request]))
        logic_true_request_s = TestHelper.get_request(TestHelper.create_url(form.action, logic_true_request[:request]))

        # Try to test 30x - redirects, cause Login-form successfull log-in
        if comment_request[:code].to_i == 300
            puts "\t\tParam: ".red.bold << comment_request[:name] << " - probably " << "UNSECURED - redirection after modification!".bold.red << "\n"  if @options[:debug]
            puts "\t\t" << post_uri.to_s << "(attr: " << comment_request[:request].to_s << ")\n\n" if @options[:debug]
        end

        if logic_true_request[:code].to_i == 300
            # Something happend not correctly - maybe successfull login redirect
            puts "\t\tParam: ".red.bold << logic_true_request[:name] << " - probably " << "UNSECURED - redirection after modification!".bold.red << "\n"  if @options[:debug]
            puts "\t\t" << post_uri.to_s << "(attr: " << logic_true_request[:request].to_s << ")\n\n" if @options[:debug]
        end

        # Create URL vectors
        break_request_vector = ContentTester::URLVector::get_vector(Nokogiri::HTML(break_request_s[:body]))
        comment_request_vector = ContentTester::URLVector::get_vector(Nokogiri::HTML(comment_request_s[:body]))
        logic_true_vector = ContentTester::URLVector::get_vector(Nokogiri::HTML(logic_true_request_s[:body]))

        # Count differences
        break_request_diff = ContentTester::URLVector::vector_weight(ContentTester::URLVector::difference(original_vector, break_request_vector))
        comment_request_diff = ContentTester::URLVector::vector_weight(ContentTester::URLVector::difference(original_vector, comment_request_vector))
        logic_true_request_diff = ContentTester::URLVector::vector_weight(ContentTester::URLVector::difference(original_vector, logic_true_vector))

        # If there is 1 attribute, there will be no change when comment rest of request
        suspect = false

        # Cause there is invalid SQL query
        suspect = true if break_request_diff > 0

        # Cause there is less conditions
        suspect = true if comment_request_diff < 0

        # Cause there is LOGICAL true - more results!
        suspect = true if logic_true_request_diff < 0

        if suspect
          puts "\t\tParam: ".red.bold << logic_true_request[:name] << " - probably " << "UNSECURED - different results!!".bold.red << "\n"  if @options[:debug]
          puts "\t\t\t" << TestHelper.create_url(form.action, break_request[:request]).to_s << "\n\t\t\t" << TestHelper.create_url(form.action, break_request[:request]).to_s << "\n\t\t\t" << TestHelper.create_url(form.action, logic_true_request[:request]).to_s if @options[:debug]
        end
      end
    }
  end

  private
    # Method returrn weight of vector differences
    # @param [URLVector] original_vector Original vector
    # @param [ResultRequest] result_request Result of request
    def get_diff_vector_weight(original_vector, result_request)
      new_vector = ContentTester::URLVector::get_vector(Nokogiri::HTML(result_request[:body]))
      difference = ContentTester::URLVector::difference(original_vector, new_vector)
      return ContentTester::URLVector::vector_weight(difference)
    end
end