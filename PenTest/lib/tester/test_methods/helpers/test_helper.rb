# URI helper
#
# @author Jan Strnadek <jan.strnadek@gmail.com>

module TestHelper
  # Create url
  # @param [String] url URL
  # @param [Array] parameters Parameters
  # @return [URI] URI reference
  def self.create_url(url, parameters)
    ret = URI(url)
    ret.query = URI.encode_www_form(parameters)
    return ret
  end

  # Method add to request parameters special symbol for testing SQL injection
  # @param [Array] params Form parameters
  # @param [Integer] iteration Interations number
  # @param [String] symbol Symbol to add
  # @return [Hash] updated parameters
  def self.add_symbol_to_form_request(params, iteration, symbol)
    # Return test request
    ret = Hash.new

    # Return hash
    ret[:request] = Hash.new
    ret[:name] = ''

    # In i is argument for substitution
    for a in 0..(params.count - 1)
      param = params[a]

      # Checkbox?
      if param[:type] == :checkbox
        if a == iteration
          ret[:name] = param[:name]
          ret[:request][param[:name]] = "1" + symbol
        else
          ret[:request][param[:name]] = "1"
        end
      elsif param[:type] == :select
        if a == iteration
          ret[:name] = param[:name]
          ret[:request][param[:name]] = param[:values][1] + symbol
        else
          ret[:request][param[:name]] = param[:values][1]
        end
      else
        if a == iteration
          ret[:name] = param[:name]
          ret[:request][param[:name]] = "test" + symbol
        else
          ret[:request][param[:name]] = "test"
        end
      end
    end

    # Return test request
    ret
  end

  # Send get request with specified parameters
  # @param [URI] uri Request url
  # @return [String] Response body
  def self.get_request(uri)
    ret = Hash.new
    size = 1000
    http = Net::HTTP.new(uri.host, uri.port)
    headers = {
        'Range' => "bytes=#{size}-"
    }
    path = uri.to_s.empty? ? "/" : uri.to_s

    ret[:code] = http.head(path, headers).code.to_i

    ret[:body] = Net::HTTP.get_response(uri).body

    ret
  end

  # Send post request with specified parameters
  # @param [URI] uri Request url
  # @return [String] Response body
  # @param [Hash] attr Attributes
  def self.post_request(uri, attr)
    ret = Hash.new
    size = 1000
    http = Net::HTTP.new(uri.host, uri.port)
    headers = {
        'Range' => "bytes=#{size}-"
    }
    path = uri.to_s.empty? ? "/" : uri.to_s

    ret[:code] = http.head(path, headers).code.to_i

    ret[:body] = Net::HTTP.post_form(uri, attr).body

    ret
  end
end